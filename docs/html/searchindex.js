Search.setIndex({"docnames": ["ast", "ast/antlr", "ast/expressions", "ast/index", "ast/statements", "ast/top_declarations", "code_generation", "code_generation/access", "code_generation/array", "code_generation/boolean", "code_generation/class_representation", "code_generation/function_generation", "code_generation/method_call", "code_generation/new_object", "code_generation/outline", "code_generation/title", "code_generation/variable", "grammar", "index", "introduction", "introduction/why", "parser", "parser/title", "semantics", "semantics/title", "semantics/type_checking"], "filenames": ["ast.rst", "ast/antlr.rst", "ast/expressions.rst", "ast/index.rst", "ast/statements.rst", "ast/top_declarations.rst", "code_generation.rst", "code_generation/access.rst", "code_generation/array.rst", "code_generation/boolean.rst", "code_generation/class_representation.rst", "code_generation/function_generation.rst", "code_generation/method_call.rst", "code_generation/new_object.rst", "code_generation/outline.rst", "code_generation/title.rst", "code_generation/variable.rst", "grammar.rst", "index.rst", "introduction.rst", "introduction/why.rst", "parser.rst", "parser/title.rst", "semantics.rst", "semantics/title.rst", "semantics/type_checking.rst"], "titles": ["<span class=\"section-number\">2. </span>Abstract Syntax Tree", "Antlr", "Expressions", "Abstract Syntax Tree", "Statements", "Top Level Declarations", "<span class=\"section-number\">5. </span>Code Generation", "Access", "Array", "Boolean Expression", "Class Rep", "Function Generation", "Method Call", "New Object Expression", "Outline", "Code Generation", "Variable", "&lt;no title&gt;", "LLOP: An Implementation of Mapping Objective Oriented Constructs to LLVM IR", "<span class=\"section-number\">1. </span>Introduction", "Introduction", "<span class=\"section-number\">3. </span>Parser", "Parser", "<span class=\"section-number\">4. </span>Semantics", "Semantics", "Type Checking"], "terms": {"A": [0, 5, 6, 11, 12], "its": [0, 5, 6, 10, 16], "super": [0, 5, 6, 7], "implement": [0, 5, 6, 10], "person": [0, 2, 5, 6, 13], "begin": [0, 4, 5, 6, 11, 12], "var": [0, 4, 5, 6, 12, 16], "ag": [0, 4, 5], "int": [0, 2, 4, 5, 6, 9, 11, 12, 14, 16], "salari": [0, 4, 5], "func": [0, 5], "init": [0, 5, 6, 13], "void": [0, 5, 6, 11, 12, 14], "self": [0, 4, 5, 6, 7, 11, 12, 16], "end": [0, 4, 5, 6, 12], "getag": [0, 4, 5], "getsalari": [0, 5], "includ": [0, 5], "signatur": [0, 5], "bodi": [0, 5, 6, 12], "idea": [0, 5], "here": [0, 5, 6, 16, 19, 20], "we": [0, 5, 6, 10, 11, 12, 13, 14, 16], "want": [0, 5, 6, 10], "seper": [0, 5], "field": [0, 2, 5, 6, 10, 13, 16], "from": [0, 2, 5, 6, 10, 12, 13], "ones": [0, 5], "just": [0, 5, 6, 11], "like": [0, 5], "scala": [0, 5], "have": [0, 5, 6, 11, 12, 14], "yet": [0, 2, 5], "becaus": [0, 5, 6, 10, 11, 14], "recurs": [0, 5], "depend": [0, 5], "compar": [0, 2, 5], "p1": [0, 4, 5], "p2": [0, 4, 5], "exampl": [0, 2, 4, 6, 12, 13], "variabledeclstat": [0, 4], "identifi": [0, 2, 4, 6, 10], "IF": [0, 4], "1000": [0, 4], "THEN": [0, 4], "els": [0, 4, 6, 8, 10, 11, 12, 16], "500": [0, 4], "ifstat": [0, 4], "stmt": [0, 4, 6, 11], "0": [0, 2, 4, 6, 10, 11, 12, 13, 14], "1": [0, 4, 6, 8, 10, 11, 12, 13], "whilestat": [0, 4], "returnstat": [0, 4], "outputstat": [0, 4], "10": [0, 2, 4, 6, 12, 13], "assignstat": [0, 4], "blockstat": [0, 4], "b": [0, 2], "multiplicativeexpr": [0, 2], "op": [0, 2], "mul": [0, 2], "div": [0, 2], "additiveexpr": [0, 2], "add": [0, 2, 6, 12], "sub": [0, 2], "isexpr": [0, 2], "referencetyp": [0, 2], "staticaccessexpr": [0, 2, 6, 7], "eat": [0, 2, 6, 12], "funcallexpr": [0, 2], "argumentlist": [0, 2], "employe": [0, 2, 6, 12], "typecoercionexpr": [0, 2], "accessexpr": [0, 2, 6, 7], "AND": [0, 2], "9": [0, 2, 6, 12], "andexpr": [0, 2, 6, 9], "OR": [0, 2], "orexpr": [0, 2, 6, 9], "NOT": [0, 2], "notexpr": [0, 2, 6, 9], "relationalexpr": [0, 2], "eq": [0, 2], "ne": [0, 2], "gt": [0, 2], "lt": [0, 2], "le": [0, 2], "ge": [0, 2], "20": [0, 2], "newexpr": [0, 2], "numexpr": [0, 2], "type": [4, 7, 9, 11, 12, 13, 16, 18], "expr": [4, 6, 7, 9, 13], "object": [5, 10, 12, 16], "return": [5, 6, 7, 9, 11, 12, 13, 14, 16], "function": [5, 10, 13, 14, 18], "i": [5, 6, 7, 10, 11, 12, 14, 16], "context": [6, 7, 9, 11, 12, 13, 14, 16], "program": [6, 12, 14], "creat": [0, 2, 6, 10, 11, 14, 16], "stuff": [6, 14], "generatevirtualt": [6, 14], "generatestruct": [6, 14], "codegen": [6, 7, 8, 9, 11, 12, 13, 14, 16], "thi": [6, 10, 11, 12, 14, 16], "generateinterfaceoffsett": [6, 14], "genvalu": [6, 7, 9, 11, 12, 13, 14, 16], "ctx": [6, 7, 8, 9, 11, 12, 13, 14, 16], "interfac": [6, 14], "declar": [6, 14, 16, 18], "first": [6, 7, 10, 11, 12, 13, 14, 16], "auto": [6, 7, 8, 9, 11, 12, 13, 14, 16], "interfacedecl": [6, 14], "second": [6, 10, 12, 14, 16], "each": [6, 10, 14], "could": [6, 14, 16], "need": [6, 11, 13, 14], "functionw": [6, 14], "when": [6, 8, 14, 16], "staticdecl": [6, 14], "createfunct": [6, 14], "uniqu": [6, 14], "classdecl": [6, 12, 14], "setclassindex": [6, 14], "nullptr": [6, 11, 12, 14, 16], "setcurclass": [6, 14], "The": [0, 2, 6, 10, 14, 16], "two": [6, 14], "element": [0, 2, 6, 8, 10, 12, 14], "parent": [6, 10, 12, 14], "vtabl": [6, 10, 13, 14], "index": [6, 11, 12, 13, 14], "2": [0, 2, 6, 9, 10, 12, 13, 14], "f": [6, 11, 12, 13, 14], "insertintovtableiniti": [6, 14], "name": [6, 11, 12, 13, 14, 16], "curfunct": [6, 11, 14], "fill": [6, 14], "initi": [6, 14], "list": [6, 14], "buildvtabl": [6, 14], "clearcurclass": [6, 14], "setcurstat": [6, 14], "clearcurstat": [6, 14], "createstaticfunct": [6, 14], "header": [6, 11, 12, 14], "repres": [6, 10], "pointer": [6, 10, 11, 12, 13, 16], "remain": [6, 10, 12], "ar": [6, 10], "struct_person": [6, 10, 13], "ptr": [6, 10, 12, 13], "i32": [6, 10, 12, 13], "us": [0, 2, 6, 8, 10], "determin": [6, 10, 12], "runtim": [6, 10], "": [6, 8, 10, 13, 16], "effici": [6, 10], "access": [8, 10, 16, 18], "dure": [6, 10, 11, 12], "actual": [6, 10], "inherit": [6, 10], "same": [6, 10, 16], "one": [0, 2, 6, 10, 16], "anoth": [0, 2, 6, 10, 11], "id_object": [6, 10], "intern": [6, 10], "constant": [6, 10], "id_person": [6, 10], "id_employe": [6, 10], "vtable_object": [6, 10], "x": [6, 10, 12, 13], "vtable_person": [6, 10, 13], "5": [0, 2, 6, 10, 13], "person_init_int_int": [6, 10], "person_getag": [6, 10], "person_getsalari": [6, 10], "vtable_employe": [6, 10], "8": [0, 2, 6, 10, 12, 13], "employee_init_int_int_int": [6, 10], "employee_getsalari": [6, 10], "employee_consum": [6, 10], "employee_earn": [6, 10], "employee_eat": [6, 10], "allo": [6, 12], "must": [6, 10, 11, 12], "differnt": [6, 12], "paramet": [6, 12], "which": [6, 12], "run": [6, 12], "equal": [6, 12], "argument": [6, 11, 12, 13], "can": [0, 2, 6, 12, 19, 20], "upcast": [6, 12], "ot": [6, 12], "std": [6, 7, 8, 11, 12, 13, 16], "pair": [6, 12, 16], "funchead": [6, 11, 12], "getclassmethodindex": [6, 12], "classtyp": [6, 12], "const": [6, 12, 13], "string": [6, 12, 13], "vector": [6, 8, 12, 13], "param": [6, 11, 12], "tostr": [6, 11, 12, 16], "iter": [6, 12], "find_if": [6, 12], "funcdecl": [6, 11, 12], "m": [6, 12], "isfunctiontyp": [6, 12], "make_pair": [6, 11, 12], "funccallexpr": [6, 12], "generateclassmethodcal": [6, 12], "genarg": [6, 12], "receiv": [6, 7, 11, 12, 16], "recevi": [6, 12], "porint": [6, 12], "find": [6, 12, 16, 19, 20], "valu": [6, 8, 9, 10, 12, 13, 16], "arg": [6, 11, 12, 13], "push_back": [6, 8, 12, 13], "itr": [6, 12], "classnam": [6, 12], "tabletyp": [6, 12, 13], "getvtabletyp": [6, 12, 13], "load": [6, 8, 11, 12, 13, 16], "builder": [6, 8, 9, 11, 12, 13, 16], "createload": [6, 12, 13, 16], "pointertyp": [6, 12], "get": [6, 8, 12, 13], "createstructgep": [6, 12, 13, 16], "getstructtyp": [6, 12, 13, 16], "issup": [6, 12], "indic": [6, 12, 13], "constantint": [6, 8, 12, 13], "inttyp": [6, 8, 9, 12, 13, 16], "tp": [6, 12], "creategep": [6, 12, 13], "fp": [6, 12, 13], "intptrtyp": [6, 11, 12, 13, 16], "result": [6, 7, 9, 12], "createcal": [6, 8, 12, 13], "headertollvmtyp": [6, 11, 12, 13], "true": [6, 12, 13], "returntyp": [6, 11, 12], "generatestaticmethodcal": [6, 12], "exact": [6, 12], "getstaticmethod": [6, 11, 12], "reserv": [6, 12], "size": [6, 8, 11, 12, 13], "fals": [6, 12], "ifstmt": [6, 12], "conditionvalu": [6, 12], "condit": [6, 12], "thenblock": [6, 12], "createbasicblock": [6, 9, 11, 12], "elseblock": [6, 12], "mergeblock": [6, 9, 12], "merg": [6, 9, 12], "createcondbr": [6, 9, 12], "setinsertpoint": [6, 9, 11, 12], "thenstmt": [6, 12], "createbr": [6, 9, 12], "elsestmt": [6, 12], "whilestmt": [6, 12], "headerblock": [6, 12], "bodyblock": [6, 12], "exitblock": [6, 12], "exit": [6, 12], "leftblock": [6, 9], "left": [6, 8, 9, 16], "rightblock": [6, 9], "right": [6, 9], "l": [6, 7, 9], "lh": [6, 7, 9], "r": [6, 9], "rh": [6, 7, 9], "phi": [6, 9], "createphi": [6, 9], "addincom": [6, 9], "valuetyp": [6, 8, 9], "val": [6, 9], "createicmpeq": [6, 9], "zeroint": [6, 9], "To": [6, 13], "do": [6, 13], "follow": [6, 13], "thing": [6, 13], "calloc": [6, 8, 13], "set": [6, 7, 13], "all": [6, 13], "uint64_t": [6, 8, 13], "getstructs": [6, 13], "classstruct": [6, 13], "themodul": [6, 11, 13], "getdatalayout": [6, 13], "getstructlayout": [6, 13], "getsizeinbyt": [6, 13], "newobjectexpr": [6, 13], "accord": [6, 13], "modul": [6, 13], "data": [6, 13], "layout": [6, 13], "sizeofclass": [6, 13], "callocarg": [6, 8, 13], "callocfunct": [6, 8, 13], "structtyp": [6, 13], "getvtabl": [6, 13], "createstor": [6, 11, 13], "prepar": [6, 13], "getmethodhead": [6, 13], "mai": [6, 11], "other": [6, 11], "alreadi": [6, 11], "finish": [6, 11], "top": [6, 11, 16, 18], "level": [6, 7, 11, 16, 18], "block": [6, 11], "last": [6, 11], "insert": [6, 11], "statemtn": [6, 11], "throw": [6, 7, 11, 16], "an": [0, 2, 6, 11, 16], "error": [6, 11, 16], "ha": [6, 11], "been": [6, 11], "generatedfunct": [6, 11], "count": [6, 8, 11], "setcurfunct": [6, 11], "main": [6, 11], "integ": [6, 10, 11], "cout": [6, 11], "llvm": [6, 11], "funciton": [6, 11], "should": [6, 11], "befor": [6, 7, 11], "isinstaticmethod": [6, 11], "runtime_error": [6, 7, 11, 16], "found": [6, 11, 16], "emthod": [6, 11], "createcurfunct": [6, 11], "pushsymbolt": [6, 11], "addvaluetocurrentt": [6, 11, 16], "selfgenvalu": [6, 11], "curclass": [6, 11], "entryblock": [6, 11], "entri": [6, 11], "local": [6, 11, 16], "veriabl": [6, 11], "alloc": [6, 11, 16], "createalloca": [6, 11, 16], "doe": [6, 11], "islastlinereturnstmt": [6, 11], "isvoid": [6, 11], "createretvoid": [6, 11], "popsymbolt": [6, 11], "externallinkag": [6, 11], "getmethodsignatur": [6, 11], "curstat": [6, 11], "new": [9, 11, 12, 16, 18], "method": [2, 10, 11, 14, 18], "If": [10, 11, 16], "static": [11, 14], "call": [8, 11, 13, 14, 18], "class": [2, 11, 14, 16, 18], "tabl": [11, 12, 13, 14, 16], "statement": [11, 18], "virtual": [12, 13, 14], "gener": [13, 14, 18], "struct": [12, 13, 16], "code": [14, 18], "id": 14, "introduct": 18, "abstract": 18, "syntax": 18, "tree": 18, "express": 18, "antlr": 18, "parser": 18, "semant": 18, "check": 18, "outlin": 18, "rep": 18, "boolean": [0, 2, 18], "aasasf": [23, 25], "incrementaccesslevel": [6, 7], "ispointertyp": [6, 7, 16], "refer": [6, 7], "decrementlevelaccess": [6, 7], "decrement": [6, 7], "setreceiv": [6, 7], "clearreceiv": [6, 7], "clear": [6, 7], "after": [6, 7], "selfexpr": [6, 7], "superexpr": [6, 7], "setstaticaccess": [6, 7], "whenev": [6, 16], "meet": [6, 16], "store": [6, 13, 16], "current": [6, 16], "symbol": [6, 16], "logic": [6, 16], "complec": [6, 16], "null": [6, 16], "ani": [6, 16], "cannot": [6, 16], "onli": [6, 10, 16], "rather": [6, 8, 10, 16], "than": [6, 10, 16], "variabledeclstmt": [6, 16], "getloadedvalu": [6, 16], "variableexpr": [6, 16], "bool": [6, 16], "loadpoint": [6, 16], "leftvalueflag": [6, 16], "toplevelaccess": [6, 16], "findvari": [6, 16], "isself": [6, 16], "getfieldruntim": [6, 16], "address": [6, 8, 16], "variabl": [2, 18], "100": [6, 13], "16": [6, 13], "3": [0, 2, 6, 13], "getelementptr": [6, 8, 12, 13], "inbound": [6, 12, 13], "align": [6, 12, 13], "4": [6, 13], "compil": [6, 12, 19, 20], "time": [6, 12], "comput": [0, 2, 6, 12], "struct_employe": [6, 12], "11": [6, 12], "7": [6, 12], "12": [6, 12], "you": [19, 20], "repo": [19, 20], "http": [19, 20], "github": [19, 20], "com": [19, 20], "mxr2000": [19, 20], "llvm_oop": [19, 20], "ninari": [0, 2], "oper": [0, 2], "inmplement": [0, 2], "coerc": [0, 2], "basic": [0, 2], "newarrayexpr": [0, 2], "arraytyp": [0, 2, 6, 8], "arr": [0, 2], "arrayindexexpr": [0, 2], "calcul": [6, 8], "length": [6, 8], "elements": [6, 8], "elementtyp": [6, 8], "isvaluetyp": [6, 8], "getvalues": [6, 8], "dynamic_cast": [6, 8], "getpointers": [6, 8], "countexpr": [6, 8], "createmul": [6, 8], "direcli": [6, 8], "assign": [6, 8], "arrai": 18}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"abstract": [0, 3], "syntax": [0, 3], "tree": [0, 3], "top": [0, 5], "level": [0, 5], "declar": [0, 4, 5], "class": [0, 5, 6, 10, 12], "method": [0, 5, 6, 12], "static": [0, 2, 5, 6, 12], "interfac": [0, 5], "statement": [0, 4, 6, 12], "variabl": [0, 4, 6, 16], "If": [0, 4, 6, 12], "while": [0, 4, 6, 12], "return": [0, 4], "output": [0, 4], "assign": [0, 4], "block": [0, 4], "express": [0, 2, 6, 9, 13], "binari": [0, 2], "i": [0, 2], "access": [0, 2, 6, 7], "function": [0, 2, 6, 11, 12], "call": [0, 2, 6, 12], "type": [0, 2, 6, 10, 23, 25], "coercion": [0, 2], "And": [0, 2, 6, 9], "Or": [0, 2, 6, 9], "Not": [0, 2, 6, 9], "relat": [0, 2], "expr": [0, 2], "new": [0, 2, 6, 13], "object": [0, 2, 6, 13, 18], "number": [0, 2], "antlr": [0, 1], "code": [6, 15], "gener": [6, 11, 15], "outlin": [6, 14], "rep": [6, 10], "struct": [6, 10], "virtual": [6, 10], "tabl": [6, 10], "id": [6, 10], "overload": [6, 12], "branch": [6, 12], "boolean": [6, 9], "welcom": [], "llop": 18, "": [], "document": [], "introduct": [19, 20], "parser": [21, 22], "semant": [23, 24], "check": [23, 25], "an": 18, "implement": 18, "map": 18, "orient": 18, "construct": 18, "llvm": 18, "ir": 18, "arrai": [0, 2, 6, 8], "creation": [0, 2, 8], "index": [0, 2, 8]}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Antlr": [[1, "antlr"], [0, "antlr"]], "Abstract Syntax Tree": [[3, "abstract-syntax-tree"], [0, "abstract-syntax-tree"]], "Statements": [[4, "statements"], [0, "statements"]], "Variable Declaration": [[4, "variable-declaration"], [0, "variable-declaration"]], "If Statement": [[4, "if-statement"], [12, "if-statement"], [0, "if-statement"], [6, "if-statement"]], "While Statement": [[4, "while-statement"], [12, "while-statement"], [0, "while-statement"], [6, "while-statement"]], "Return Statement": [[4, "return-statement"], [0, "return-statement"]], "Output Statement": [[4, "output-statement"], [0, "output-statement"]], "Assignment": [[4, "assignment"], [0, "assignment"]], "Block Statement": [[4, "block-statement"], [0, "block-statement"]], "Top Level Declarations": [[5, "top-level-declarations"], [0, "top-level-declarations"]], "Class Declaration": [[5, "class-declaration"], [0, "class-declaration"]], "Method Declaration": [[5, "method-declaration"], [0, "method-declaration"]], "Static Declaration": [[5, "static-declaration"], [0, "static-declaration"]], "Interface Declaration": [[5, "interface-declaration"], [0, "interface-declaration"]], "Boolean Expression": [[9, "boolean-expression"], [6, "boolean-expression"]], "And Expression": [[9, "and-expression"], [6, "and-expression"]], "Or Expression": [[9, "or-expression"], [6, "or-expression"]], "Not Expression": [[9, "not-expression"], [6, "not-expression"]], "Function Generation": [[11, "function-generation"], [6, "function-generation"]], "Outline": [[14, "outline"], [6, "outline"]], "Code Generation": [[15, "code-generation"], [6, "code-generation"]], "Parser": [[21, "parser"], [22, "parser"]], "Semantics": [[23, "semantics"], [24, "semantics"]], "Type Checking": [[23, "type-checking"], [25, "type-checking"]], "Access": [[7, "access"], [0, "access"], [2, "access"], [6, "access"]], "Variable": [[16, "variable"], [6, "variable"]], "New Object Expression": [[13, "new-object-expression"], [6, "new-object-expression"]], "Method Call": [[12, "method-call"], [6, "method-call"]], "Function Overloadding": [[12, "function-overloadding"], [6, "function-overloadding"]], "Class Method Call": [[12, "class-method-call"], [6, "class-method-call"]], "Static Method Call": [[12, "static-method-call"], [6, "static-method-call"]], "Branches": [[12, "branches"], [6, "branches"]], "LLOP: An Implementation of Mapping Objective Oriented Constructs to LLVM IR": [[18, "llop-an-implementation-of-mapping-objective-oriented-constructs-to-llvm-ir"]], "Introduction": [[19, "introduction"], [20, "introduction"]], "Expressions": [[0, "expressions"], [2, "expressions"]], "Binary Expression": [[0, "binary-expression"], [2, "binary-expression"]], "Is Expression": [[0, "is-expression"], [2, "is-expression"]], "Static Access": [[0, "static-access"], [2, "static-access"]], "Function Call": [[0, "function-call"], [2, "function-call"]], "Type Coercion": [[0, "type-coercion"], [2, "type-coercion"]], "And": [[0, "and"], [2, "and"]], "Or": [[0, "or"], [2, "or"]], "Not": [[0, "not"], [2, "not"]], "Relational Expr": [[0, "relational-expr"], [2, "relational-expr"]], "New Object": [[0, "new-object"], [2, "new-object"]], "Number": [[0, "number"], [2, "number"]], "Array Creation": [[0, "array-creation"], [2, "array-creation"], [8, "array-creation"]], "Array Index": [[0, "array-index"], [2, "array-index"], [8, "array-index"]], "Class Rep": [[6, "class-rep"], [10, "class-rep"]], "Struct": [[6, "struct"], [10, "struct"]], "Virtual Table": [[6, "virtual-table"], [10, "virtual-table"]], "Type Id": [[6, "type-id"], [10, "type-id"]], "Array": [[6, "array"], [8, "array"]]}, "indexentries": {}})