Search.setIndex({"docnames": ["ast", "ast/antlr", "ast/expressions", "ast/index", "ast/statements", "ast/top_declarations", "code_generation", "code_generation/class_representation", "code_generation/method_call", "code_generation/title", "index", "introduction", "introduction/why", "parser", "parser/title", "semantics", "semantics/title", "semantics/type_checking"], "filenames": ["ast.rst", "ast/antlr.rst", "ast/expressions.rst", "ast/index.rst", "ast/statements.rst", "ast/top_declarations.rst", "code_generation.rst", "code_generation/class_representation.rst", "code_generation/method_call.rst", "code_generation/title.rst", "index.rst", "introduction.rst", "introduction/why.rst", "parser.rst", "parser/title.rst", "semantics.rst", "semantics/title.rst", "semantics/type_checking.rst"], "titles": ["<span class=\"section-number\">2. </span>Abstract Syntax Tree", "Antlr", "Expressions", "Abstract Syntax Tree", "Statements", "Top Level Declarations", "<span class=\"section-number\">5. </span>Code Generation", "Class Rep", "Method Call", "Code Generation", "Welcome to llop\u2019s documentation!", "<span class=\"section-number\">1. </span>Introduction", "Introduction", "<span class=\"section-number\">3. </span>Parser", "Parser", "<span class=\"section-number\">4. </span>Semantics", "Semantics", "Type Checking"], "terms": {"A": [0, 5, 6, 8], "its": [0, 5, 6, 7], "super": [0, 5], "implement": [0, 5, 6, 7], "person": [0, 2, 4, 5], "begin": [0, 4, 5, 6, 8], "var": [0, 4, 5], "ag": [0, 4, 5], "int": [0, 4, 5, 6, 8], "salari": [0, 4, 5], "func": [0, 5], "init": [0, 5], "void": [0, 5], "self": [0, 4, 5, 6, 8], "end": [0, 4, 5, 6, 8], "getag": [0, 4, 5], "getsalari": [0, 5], "includ": [0, 5], "signatur": [0, 5], "bodi": [0, 5, 6, 8], "idea": [0, 5], "here": [0, 5], "we": [0, 5, 6, 7], "want": [0, 5, 6, 7], "seper": [0, 5], "field": [0, 5, 6, 7], "from": [0, 5, 6, 7, 8], "ones": [0, 5], "just": [0, 5], "like": [0, 5], "scala": [0, 5], "have": [0, 5, 6, 8], "yet": [0, 5], "becaus": [0, 5, 6, 7], "recurs": [0, 5], "depend": [0, 5], "compar": [0, 2, 5], "p1": [0, 4, 5], "p2": [0, 4, 5], "exampl": [0, 2, 4], "variabledeclstat": [0, 4], "identifi": [0, 2, 4, 6, 7], "IF": [0, 4], "1000": [0, 4], "THEN": [0, 4], "els": [0, 4, 6, 7, 8], "500": [0, 4], "ifstat": [0, 4], "expr": 4, "stmt": [0, 4], "0": [0, 4, 6, 7, 8], "1": [0, 4, 6, 7, 8], "whilestat": [0, 4], "returnstat": [0, 4], "outputstat": [0, 4], "10": [0, 2, 4], "assignstat": [0, 2, 4], "blockstat": [0, 4], "20": [0, 4], "referencetyp": [0, 2, 4], "argumentlist": [0, 2, 4], "b": [0, 2], "eat": [0, 2], "employe": [0, 2], "AND": [0, 2], "9": [0, 2, 4], "OR": [0, 2], "type": [4, 8, 10], "object": [5, 6, 7, 8], "return": [5, 6, 8], "function": [5, 7], "i": [5, 6, 7, 8], "introduct": 10, "abstract": 10, "syntax": 10, "tree": 10, "top": 10, "level": 10, "declar": 10, "statement": 10, "express": 10, "antlr": 10, "parser": 10, "semant": 10, "check": 10, "code": 10, "gener": 10, "class": 10, "rep": 10, "aasasf": [15, 17], "op": [0, 2], "eq": [0, 2], "ne": [0, 2], "gt": [0, 2], "lt": [0, 2], "le": [0, 2], "ge": [0, 2], "personcompar": [], "staticaccessexpr": [0, 2], "funcallexpr": [0, 2], "NOT": [0, 2], "notexpr": [0, 2], "each": [6, 7], "repres": [6, 7], "The": [6, 7], "first": [6, 7, 8], "pointer": [6, 7, 8], "remain": [6, 7, 8], "ar": [6, 7], "struct_person": [6, 7], "ptr": [6, 7], "i32": [6, 7], "element": [6, 7], "thi": [6, 7, 8], "us": [6, 7], "determin": [6, 7, 8], "runtim": [6, 7], "second": [6, 7, 8], "": [6, 7], "parent": [6, 7, 8], "effici": [6, 7], "access": [6, 7], "method": [7, 10], "dure": [6, 7], "actual": [6, 7], "If": 7, "inherit": [6, 7], "same": [6, 7], "one": [6, 7], "anoth": [6, 7], "id_object": [6, 7], "intern": [6, 7], "constant": [6, 7], "id_person": [6, 7], "id_employe": [6, 7], "2": [6, 7, 8], "vtable_object": [6, 7], "x": [6, 7], "vtable_person": [6, 7], "5": [6, 7], "person_init_int_int": [6, 7], "person_getag": [6, 7], "person_getsalari": [6, 7], "vtable_employe": [6, 7], "8": [6, 7], "employee_init_int_int_int": [6, 7], "employee_getsalari": [6, 7], "employee_consum": [6, 7], "employee_earn": [6, 7], "employee_eat": [6, 7], "call": 10, "allo": [6, 8], "must": [6, 8], "differnt": [6, 8], "paramet": [6, 8], "which": [6, 8], "run": [6, 8], "name": [6, 8], "equal": [6, 8], "argument": [6, 8], "can": [6, 8], "upcast": [6, 8], "ot": [6, 8], "std": [6, 8], "pair": [6, 8], "funchead": [6, 8], "context": [6, 8], "getclassmethodindex": [6, 8], "classtyp": [6, 8], "const": [6, 8], "string": [6, 8], "vector": [6, 8], "genvalu": [6, 8], "param": [6, 8], "auto": [6, 8], "classdecl": [6, 8], "program": [6, 8], "tostr": [6, 8], "iter": [6, 8], "find_if": [6, 8], "funcdecl": [6, 8], "m": [6, 8], "header": [6, 8], "isfunctiontyp": [6, 8], "make_pair": [6, 8], "nullptr": [6, 8], "funccallexpr": [6, 8], "generateclassmethodcal": [6, 8], "ctx": [6, 8], "genarg": [6, 8], "receiv": [6, 8], "recevi": [6, 8], "porint": [6, 8], "find": [6, 8], "index": [6, 8], "valu": [6, 8], "arg": [6, 8], "add": [6, 8], "push_back": [6, 8], "itr": [6, 8], "classnam": [6, 8], "tabletyp": [6, 8], "getvtabletyp": [6, 8], "load": [6, 8], "builder": [6, 8], "createload": [6, 8], "pointertyp": [6, 8], "get": [6, 8], "createstructgep": [6, 8], "getstructtyp": [6, 8], "issup": [6, 8], "indic": [6, 8], "constantint": [6, 8], "inttyp": [6, 8], "tp": [6, 8], "creategep": [6, 8], "fp": [6, 8], "f": [6, 8], "intptrtyp": [6, 8], "result": [6, 8], "createcal": [6, 8], "headertollvmtyp": [6, 8], "true": [6, 8], "new": [6, 8], "returntyp": [6, 8], "virtual": 8, "tabl": 8, "generatestaticmethodcal": [6, 8], "exact": [6, 8], "getstaticmethod": [6, 8], "reserv": [6, 8], "size": [6, 8], "fals": [6, 8], "ifstmt": [6, 8], "codegen": [6, 8], "conditionvalu": [6, 8], "condit": [6, 8], "thenblock": [6, 8], "createbasicblock": [6, 8], "elseblock": [6, 8], "mergeblock": [6, 8], "merg": [6, 8], "createcondbr": [6, 8], "setinsertpoint": [6, 8], "thenstmt": [6, 8], "createbr": [6, 8], "elsestmt": [6, 8], "whilestmt": [6, 8], "headerblock": [6, 8], "bodyblock": [6, 8], "exitblock": [6, 8], "exit": [6, 8]}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"abstract": [0, 3], "syntax": [0, 3], "tree": [0, 3], "top": [0, 5], "level": [0, 5], "declar": [0, 4, 5], "class": [0, 5, 6, 7, 8], "method": [0, 5, 6, 8], "static": [0, 2, 5, 6, 8], "interfac": [0, 5], "statement": [0, 4, 6, 8], "variabl": [0, 4], "If": [0, 4, 6, 8], "while": [0, 4, 6, 8], "return": [0, 4], "output": [0, 4], "assign": [0, 4], "block": [0, 4], "new": [0, 4], "object": [0, 4], "express": [0, 2], "binari": [0, 2], "i": [0, 2], "access": [0, 2], "function": [0, 2, 6, 8], "call": [0, 2, 6, 8], "type": [0, 2, 6, 7, 15, 17], "coercion": [0, 2], "And": [0, 2], "Or": [0, 2], "antlr": [0, 1], "code": [6, 9], "gener": [6, 9], "rep": [6, 7], "welcom": 10, "llop": 10, "": 10, "document": 10, "introduct": [11, 12], "parser": [13, 14], "semant": [15, 16], "check": [15, 17], "number": [0, 4], "relat": [0, 2], "expr": [0, 2], "Not": [0, 2], "struct": [6, 7], "virtual": [6, 7], "tabl": [6, 7], "id": [6, 7], "overload": [6, 8], "branch": [6, 8]}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Antlr": [[1, "antlr"], [0, "antlr"]], "Abstract Syntax Tree": [[3, "abstract-syntax-tree"], [0, "abstract-syntax-tree"]], "Top Level Declarations": [[5, "top-level-declarations"], [0, "top-level-declarations"]], "Class Declaration": [[5, "class-declaration"], [0, "class-declaration"]], "Method Declaration": [[5, "method-declaration"], [0, "method-declaration"]], "Static Declaration": [[5, "static-declaration"], [0, "static-declaration"]], "Interface Declaration": [[5, "interface-declaration"], [0, "interface-declaration"]], "Code Generation": [[9, "code-generation"], [6, "code-generation"]], "Welcome to llop\u2019s documentation!": [[10, "welcome-to-llop-s-documentation"]], "Introduction": [[11, "introduction"], [12, "introduction"]], "Parser": [[13, "parser"], [14, "parser"]], "Semantics": [[15, "semantics"], [16, "semantics"]], "Type Checking": [[15, "type-checking"], [17, "type-checking"]], "Statements": [[4, "statements"], [0, "statements"]], "Variable Declaration": [[4, "variable-declaration"], [0, "variable-declaration"]], "If Statement": [[4, "if-statement"], [0, "if-statement"], [6, "if-statement"], [8, "if-statement"]], "While Statement": [[4, "while-statement"], [0, "while-statement"], [6, "while-statement"], [8, "while-statement"]], "Return Statement": [[4, "return-statement"], [0, "return-statement"]], "Output Statement": [[4, "output-statement"], [0, "output-statement"]], "Assignment": [[4, "assignment"], [0, "assignment"]], "Block Statement": [[4, "block-statement"], [0, "block-statement"]], "New Object": [[4, "new-object"], [0, "new-object"]], "Number": [[4, "number"], [0, "number"]], "Expressions": [[0, "expressions"], [2, "expressions"]], "Binary Expression": [[0, "binary-expression"], [2, "binary-expression"]], "Is Expression": [[0, "is-expression"], [2, "is-expression"]], "Static Access": [[0, "static-access"], [2, "static-access"]], "Function Call": [[0, "function-call"], [2, "function-call"]], "Type Coercion": [[0, "type-coercion"], [2, "type-coercion"]], "Access": [[0, "access"], [2, "access"]], "And": [[0, "and"], [2, "and"]], "Or": [[0, "or"], [2, "or"]], "Not": [[0, "not"], [2, "not"]], "Relational Expr": [[0, "relational-expr"], [2, "relational-expr"]], "Class Rep": [[7, "class-rep"], [6, "class-rep"]], "Struct": [[7, "struct"], [6, "struct"]], "Virtual Table": [[7, "virtual-table"], [6, "virtual-table"]], "Type Id": [[7, "type-id"], [6, "type-id"]], "Method Call": [[6, "method-call"], [8, "method-call"]], "Function Overloadding": [[6, "function-overloadding"], [8, "function-overloadding"]], "Class Method Call": [[6, "class-method-call"], [8, "class-method-call"]], "Static Method Call": [[6, "static-method-call"], [8, "static-method-call"]], "Branches": [[6, "branches"], [8, "branches"]]}, "indexentries": {}})