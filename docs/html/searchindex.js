Search.setIndex({"docnames": ["code_generation", "code_generation/class_representation", "code_generation/title", "index", "introduction", "introduction/why", "parser", "parser/antlr", "parser/declarations", "parser/expressions", "parser/index", "parser/top_declarations", "semantics", "semantics/title", "semantics/type_checking"], "filenames": ["code_generation.rst", "code_generation/class_representation.rst", "code_generation/title.rst", "index.rst", "introduction.rst", "introduction/why.rst", "parser.rst", "parser/antlr.rst", "parser/declarations.rst", "parser/expressions.rst", "parser/index.rst", "parser/top_declarations.rst", "semantics.rst", "semantics/title.rst", "semantics/type_checking.rst"], "titles": ["<span class=\"section-number\">4. </span>Code Generation", "Class Rep", "Code Generation", "Welcome to llop\u2019s documentation!", "<span class=\"section-number\">1. </span>Introduction", "Introduction", "<span class=\"section-number\">2. </span>Parser", "Antlr", "Statements", "Expressions", "Parser", "Top Level Declarations", "<span class=\"section-number\">3. </span>Semantics", "Semantics", "Type Checking"], "terms": {"introduct": 3, "parser": 3, "top": 3, "level": 3, "declar": 3, "statement": 3, "express": 3, "antlr": 3, "semant": 3, "type": [3, 6, 8], "check": 3, "code": 3, "gener": 3, "class": 3, "rep": 3, "A": [6, 11], "its": [6, 11], "super": [6, 11], "implement": [6, 11], "person": [6, 11], "object": [6, 11], "begin": [6, 11], "var": [6, 8, 11], "ag": [6, 8, 11], "int": [6, 8, 11], "salari": [6, 8, 11], "func": [6, 11], "init": [6, 11], "void": [6, 11], "self": [6, 8, 11], "end": [6, 11], "getag": [6, 11], "return": [6, 11], "getsalari": [6, 11], "includ": [6, 11], "function": [6, 11], "signatur": [6, 11], "bodi": [6, 11], "idea": [6, 11], "here": [6, 11], "i": [6, 11], "we": [6, 11], "want": [6, 11], "seper": [6, 11], "field": [6, 11], "from": [6, 11], "ones": [6, 11], "just": [6, 11], "like": [6, 11], "scala": [6, 11], "have": [6, 11], "yet": [6, 11], "becaus": [6, 11], "recurs": [6, 11], "depend": [6, 11], "compar": [6, 11], "p1": [6, 11], "p2": [6, 11], "exampl": [6, 8], "variabledeclstat": [6, 8], "identifi": [6, 8], "IF": [6, 8], "1000": [6, 8], "THEN": [6, 8], "els": [6, 8], "500": [6, 8], "ifstat": [6, 8], "expr": [6, 8], "stmt": [6, 8], "0": [6, 8], "1": [6, 8], "whilestat": [6, 8], "aasasf": [12, 14]}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"code": [0, 2], "gener": [0, 2], "class": [0, 1, 6, 11], "rep": [0, 1], "welcom": 3, "llop": 3, "": 3, "document": 3, "introduct": [4, 5], "parser": [6, 10], "top": [6, 11], "level": [6, 11], "declar": [6, 8, 11], "method": [6, 11], "static": [6, 11], "interfac": [6, 11], "statement": [6, 8], "variabl": [6, 8], "If": [6, 8], "while": [6, 8], "express": [6, 9], "antlr": [6, 7], "semant": [12, 13], "type": [12, 14], "check": [12, 14]}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Code Generation": [[0, "code-generation"], [2, "code-generation"]], "Class Rep": [[0, "class-rep"], [1, "class-rep"]], "Welcome to llop\u2019s documentation!": [[3, "welcome-to-llop-s-documentation"]], "Introduction": [[4, "introduction"], [5, "introduction"]], "Parser": [[6, "parser"], [10, "parser"]], "Top Level Declarations": [[6, "top-level-declarations"], [11, "top-level-declarations"]], "Class Declaration": [[6, "class-declaration"], [11, "class-declaration"]], "Method Declaration": [[6, "method-declaration"], [11, "method-declaration"]], "Static Declaration": [[6, "static-declaration"], [11, "static-declaration"]], "Interface Declaration": [[6, "interface-declaration"], [11, "interface-declaration"]], "Statements": [[6, "statements"], [8, "statements"]], "Variable Declaration": [[6, "variable-declaration"], [8, "variable-declaration"]], "If Statement": [[6, "if-statement"], [8, "if-statement"]], "While Statement": [[6, "while-statement"], [8, "while-statement"]], "Expressions": [[6, "expressions"], [9, "expressions"]], "Antlr": [[6, "antlr"], [7, "antlr"]], "Semantics": [[12, "semantics"], [13, "semantics"]], "Type Checking": [[12, "type-checking"], [14, "type-checking"]]}, "indexentries": {}})